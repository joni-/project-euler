"""
Each new term in the Fibonacci sequence is generated by adding the previous 
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
"""

class FibonacciGenerator:

    def __init__(self):
        self.previous_fib = 1
        self.current_fib = 2
        self.count = 0

    def get_next(self):
        if self.count == 0:
            self.count += 1
            return self.previous_fib
        result = self.current_fib
        self.current_fib += self.previous_fib
        self.previous_fib = result
        self.count += 1
        return result

def sum_of_even_valued_fibonacci_numbers(limit):
    result = 0
    generator = FibonacciGenerator()
    fib = generator.get_next()
    while fib <= limit:
        if fib % 2 == 0:
            result += fib
        fib = generator.get_next()
    return result

if __name__ == '__main__':
    n = 4000000
    result = sum_of_even_valued_fibonacci_numbers(n)
    print result
